--Libarary_tables

DECLARE 
    sql_stmt VARCHAR2(600);
BEGIN
    BEGIN
        sql_stmt := 'DROP TABLE BOOKS CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE BOOK_AUTHORS CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE PUBLISHERS CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE BOOK_COPIES CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE BRANCHES CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE BOOK_LOANS CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE BORROWERS CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    BEGIN
        sql_stmt := 'DROP TABLE RENT_FREQUENCY CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE sql_stmt;
    EXCEPTION
        WHEN OTHERS THEN
            NULL;
    END;

    sql_stmt := 'CREATE TABLE BOOK_AUTHORS(
    BOOK_ID CHAR(2) UNIQUE,
    AUTHOR_NAME VARCHAR2(100),
    
    CONSTRAINT PK_BOOK_AUTHORS
        PRIMARY KEY(BOOK_ID, AUTHOR_NAME)
)';
    EXECUTE IMMEDIATE sql_stmt;

    sql_stmt := 'CREATE TABLE PUBLISHERS(
    NAME1 VARCHAR2(100) PRIMARY KEY,
    address1 VARCHAR2(100),
    phone1 CHAR(12)
)';
    EXECUTE IMMEDIATE sql_stmt;

    sql_stmt := 'CREATE TABLE BOOKS(
    BOOK_ID CHAR(2) PRIMARY KEY,
    title1 VARCHAR2(100) UNIQUE,
    publisher_name VARCHAR2(100),

    CONSTRAINT FK_BOOKS_BOOK_AUTHORS
         FOREIGN KEY (BOOK_ID) REFERENCES BOOK_AUTHORS(BOOK_ID),
    CONSTRAINT FK_BOOKS_PUBLISHERS
        FOREIGN KEY (publisher_name) REFERENCES PUBLISHERS(NAME1)
)';
    EXECUTE IMMEDIATE sql_stmt;
    
   sql_stmt := 'CREATE TABLE BRANCHES(
    BRANCH_ID CHAR(3) PRIMARY KEY,
    branch_name VARCHAR2(100),
    address2 VARCHAR2(100)
)';
    EXECUTE IMMEDIATE sql_stmt;

    sql_stmt := 'CREATE TABLE RENT_FREQUENCY(
    BOOK_ID CHAR(2) PRIMARY KEY,
    loan_count NUMBER(4,0),

    CONSTRAINT FK_RENT_FREQUENCY_BOOKS
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(BOOK_ID)
)';
    EXECUTE IMMEDIATE sql_stmt;

    sql_stmt := 'CREATE TABLE BOOK_COPIES(
    BOOK_ID CHAR(2),
    BRANCH_ID CHAR(3),
    no_of_copies NUMBER(3,0),

    CONSTRAINT PK_BOOK_COPIES
        PRIMARY KEY(BOOK_ID, BRANCH_ID),
    CONSTRAINT FK_BOOK_COPIES_BOOKS
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(BOOK_ID),
    CONSTRAINT FK_BOOK_COPIES_BRANCHES
        FOREIGN KEY (BRANCH_ID) REFERENCES BRANCHES(BRANCH_ID)
)';
    EXECUTE IMMEDIATE sql_stmt;
    
    sql_stmt := 'CREATE TABLE BORROWERS(
    CARD_NO NUMBER(5,0) PRIMARY KEY,
    name2 VARCHAR2(100),
    address3 VARCHAR2(100),
    phone2 CHAR(12),
    unpaid_dues NUMBER(5,2)
)';
    EXECUTE IMMEDIATE sql_stmt;

    sql_stmt := 'CREATE TABLE BOOK_LOANS(
    BOOK_ID CHAR(2),
    BRANCH_ID CHAR(3),
    CARD_NO NUMBER(5,0),
    date_out DATE,
    date_due DATE,
    date_returned DATE,

    CONSTRAINT PK_BOOK_LOANS
        PRIMARY KEY(BOOK_ID, BRANCH_ID, CARD_NO),
    CONSTRAINT FK_BOOK_LOANS_BOOKS
        FOREIGN KEY(BOOK_ID) REFERENCES BOOKS(BOOK_ID),
    CONSTRAINT FK_BOOK_LOANS_BRANCHES
        FOREIGN KEY(BRANCH_ID) REFERENCES BRANCHES(BRANCH_ID),
    CONSTRAINT FK_BOOK_LOANS_BORROWERS
        FOREIGN KEY(CARD_NO) REFERENCES BORROWERS(CARD_NO)
)';
    EXECUTE IMMEDIATE sql_stmt;
    
END;
/

COMMIT;